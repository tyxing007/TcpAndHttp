<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       					   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            			   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="false">

	<context:component-scan base-package="com.annotation.springlock" />
	<!-- <aop:aspectj-autoproxy></aop:aspectj-autoproxy> -->


	<aop:aspectj-autoproxy proxy-target-class="true">
		<aop:include name="dlockInterceptor" />
	</aop:aspectj-autoproxy>


	<!-- <aop:config> <aop:pointcut id="log" expression="execution(* com.annotation.springlock.*(..))"/> 
		<aop:aspect id="logging" ref="dlockInterceptor"> <aop:before pointcut-ref="log" 
		method="before" /> <aop:after-returning pointcut-ref="log" method="afterReturning" 
		/> </aop:aspect> </aop:config> -->

	<!-- <bean id="matchBeforeAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"> 
		<property name="pointcut"> <ref bean="pointcut" /> </property> <property 
		name="advice"> <ref bean="dlockInterceptor" /> </property> </bean> -->

	<bean id="matchBeforeAdvisor"
		class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
		<property name="expression" value="execution(* com.annotation.springlock.*.*(..))"></property>
		<property name="advice" ref="dlockInterceptor"></property>
	</bean>

</beans>